<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace=" ">
	
	<!-- ********************카테고리******************* -->
	<!-- 카테고리만 생성 / 세션에 있는 memberno 가져오기 -->
	<insert id="insertCategory" parameterType="CategoryDto">
		insert into category(memberno, categoryname, admin)
		values (#{memberno}, #{categoryname}, 1)
	</insert>
	
	
	<!-- 카테고리조회 -->
	<select id="categoryGroup" resultType="CategoryDto">
		select * from category
	</select>
	
	
	
	
	<!-- **********************그룹******************** -->
	<!-- 그룹 전체 조회 -->
	<select id="selectAllGroup" resultType="GroupDto">
		select * from groups
	</select>
	
	<!-- 카테고리별 그룹 조회 -->
	<select id="selectCategoryGroup" resultType="GroupDto">
		select * from groups
		where categoryno = #{categoryno}	
	</select>
	
	<select id="selectCategoryGroup1" resultType="GroupDto">
		select * from groups;
	</select>
	
	<!-- 그룹생성시 미분류 카테고리를 1번이라고 했을때, 처음 생성그룹은 항상 카테고리 1번으로 들어감. -->
	<insert id="insertGroup" parameterType="GroupDto">
		insert into groups(categoryno, memberno, groupname)
		values (1, #{memberno}, #{groupname})
	</insert>
	
	<!-- 미분류카테고리에 있는 그룹을 다른 카테고리로 이동 -->
	<update id="updateGroupCategory" parameterType="GroupDto">
		update groups
		set categoryno = #{categoryno}
		where groupno = #{groupno}
	</update>
	
	<!-- 그룹 이름 변경하기 -->
	<update id="updateGroupName" parameterType="GroupDto">
		update groups
		set groupname = #{groupname}
		where groupno = #{groupno} and categoryno = #{categoryno}
	</update>
	
	
	
	
	
	
	<!-- **********************composed(멤버의 그룹정보)******************** -->
	<!-- 그룹에 초대하기 invitation 유효성검사: category에 admin이 1이면 초대가 가능-->
	<insert id="inviteGroupMem" parameterType="kr.co.assemble.dto.ComposedDTO">
		insert into composed
		values (#{groupno}, #{categoryno}, #{memberno})
	</insert>
	
	<!-- 그룹구성 멤버 검색 -->
	<select id="composedList" resultType="ComposedDto">
		select * from composed
	</select>
	
	<!-- 그룹별 정보, 구성원 정보(Groups_Memberinfo_Composed_DTO) -->
	<!--그룹장이름 -->
	<select id="selectGroupMasterName" resultType="string">
		select i.mi_memname
		from groups as g join memberinfo as i join composed as c
		on g.groupno = c.groupno and c.memberno = i.mi_memberno and g.memberno = c.memberno
		where g.groupno = #{groupno}
	</select>
	
	<!-- 그룹장아이디 -->
	<select id="selectGroupMasterId" resultType="string">
		select i.mi_memid
		from groups as g join memberinfo as i join composed as c
		on g.groupno = c.groupno and c.memberno = i.mi_memberno and g.memberno = c.memberno
		where g.groupno = #{groupno}
	</select>
	
	<!-- 그룹명 -->
	<select id="selectGroupName" resultType="string">
		select groupname from groups
		where groupno = #{groupno}
	</select>
	
	<!--그룹원 모두  -->
	<select id="selectGroupMemberName" resultType="G_Mi_C_Dto">
		select g.groupname, i.mi_memname, i.mi_memid
		from groups as g join memberinfo as i join composed as c
		on g.groupno = c.groupno and c.memberno = i.mi_memberno
		where g.groupno = #{groupno}
	</select>
	

	<!-- **********************Board(게시판)******************** -->

	<!-- 그룹별로 게시글 조회 공지글일 경우(1) 제일 위로, 최신글이 제일 위에 올라오도록 정렬 -->
	<select id="selectGroupBoard" resultType="G_MDto">
		select b.memberno, m.mi_memname, m.mi_memid, b.boardnotice, b.boarddate, b.boardcontents, b.boardlike, b.boardhate, b.requestboolean 
		from memberinfo as m
		join groupboard as b
		on m.mi_memberno = b.memberno
		where b.groupno = #{groupno}
		order by boardnotice desc, boarddate desc
	</select>
	
	<!-- bno로 전체 조회 -->
	<select id="selectOneBno" resultType="BoardDto" parameterType="int">
		select * from groupboard
		where bno = #{bno}
	</select>
	
	<!-- 글쓰기 : 맨처음 글을 쓰게되면 공지사항여부X=0, 좋아요싫어요 0고정, 요청이 아닌경우0 -->
	<insert id="writeBoard" parameterType="BoardDto">
		insert into groupboard (groupno, categoryno, memberno, boarddate, boardcontents, boardnotice, boardlike, boardhate, requestboolean)
		values (#{groupno}, #{categoryno}, #{memberno}, now(), #{boardcontents}, 0, 0, 0, 0)
	</insert>
	
	<!-- 글 수정 -->
	<update id="updateBoard" parameterType="BoardDto">
		update groupboard
		set boardcontents = #{boardcontents}
		where bno = #{bno}
	</update>
		
	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		delete from groupboard
		where bno = #{bno}
	</delete>

	<!-- 내가 포함된 그룹의 글들만 조회 (나의 소식피드) -->
	<select id="myGroupBoard" resultType="BoardDto">
		select * from groupboard
		where groupno in (select groupno
		from composed
		where memberno = #{memberno})
		order by boarddate desc;
	</select>
	
	
	   <!-- 그룹별로 게시글 조회 -->
<!--    <select id="selectGroupBoard" resultType="BoardDto">
      select * from groupboard
      where groupno = #{groupno}
      order by boardnotice desc, boarddate desc;
   </select> -->
	

	
</mapper>